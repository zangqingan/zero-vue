// mock/test.ts
var test_default = [
  {
    url: "/api/get",
    method: "get",
    response: ({ query }) => {
      return {
        code: 0,
        data: {
          name: "vben"
        }
      };
    }
  },
  {
    url: "/api/post",
    method: "post",
    timeout: 2e3,
    response: {
      code: 0,
      data: {
        name: "vben"
      }
    }
  },
  {
    url: "/api/text",
    method: "post",
    rawResponse: async (req, res) => {
      let reqbody = "";
      await new Promise((resolve) => {
        req.on("data", (chunk) => {
          reqbody += chunk;
        });
        req.on("end", () => resolve(void 0));
      });
      res.setHeader("Content-Type", "text/plain");
      res.statusCode = 200;
      res.end(`hello, ${reqbody}`);
    }
  },
  {
    url: "/api/text",
    method: "post",
    rawResponse: async (req, res) => {
      let reqbody = "";
      await new Promise((resolve) => {
        req.on("data", (chunk) => {
          reqbody += chunk;
        });
        req.on("end", () => resolve(void 0));
      });
      res.setHeader("Content-Type", "text/plain");
      res.statusCode = 200;
      res.end(`hello, ${reqbody}`);
    }
  }
];
export {
  test_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibW9jay90ZXN0LnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX2luamVjdGVkX2ZpbGVuYW1lX18gPSBcIkQ6XFxcXHdwcm9qZWN0XFxcXGxlYXJuaW5nLXByb2plY3RcXFxcemVyby12dWVcXFxcbW9ja1xcXFx0ZXN0LnRzXCI7Y29uc3QgX19pbmplY3RlZF9kaXJuYW1lX18gPSBcIkQ6XFxcXHdwcm9qZWN0XFxcXGxlYXJuaW5nLXByb2plY3RcXFxcemVyby12dWVcXFxcbW9ja1wiO2NvbnN0IF9faW5qZWN0ZWRfaW1wb3J0X21ldGFfdXJsX18gPSBcImZpbGU6Ly8vRDovd3Byb2plY3QvbGVhcm5pbmctcHJvamVjdC96ZXJvLXZ1ZS9tb2NrL3Rlc3QudHNcIjtpbXBvcnQgeyBNb2NrTWV0aG9kIH0gZnJvbSAndml0ZS1wbHVnaW4tbW9jaydcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFtcclxuICB7XHJcbiAgICB1cmw6ICcvYXBpL2dldCcsXHJcbiAgICBtZXRob2Q6ICdnZXQnLFxyXG4gICAgcmVzcG9uc2U6ICh7IHF1ZXJ5IH0pID0+IHtcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBjb2RlOiAwLFxyXG4gICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgIG5hbWU6ICd2YmVuJ1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0sXHJcbiAge1xyXG4gICAgdXJsOiAnL2FwaS9wb3N0JyxcclxuICAgIG1ldGhvZDogJ3Bvc3QnLFxyXG4gICAgdGltZW91dDogMjAwMCxcclxuICAgIHJlc3BvbnNlOiB7XHJcbiAgICAgIGNvZGU6IDAsXHJcbiAgICAgIGRhdGE6IHtcclxuICAgICAgICBuYW1lOiAndmJlbidcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0sXHJcbiAge1xyXG4gICAgdXJsOiAnL2FwaS90ZXh0JyxcclxuICAgIG1ldGhvZDogJ3Bvc3QnLFxyXG4gICAgcmF3UmVzcG9uc2U6IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgICBsZXQgcmVxYm9keSA9ICcnXHJcbiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgICAgIHJlcS5vbignZGF0YScsIGNodW5rID0+IHtcclxuICAgICAgICAgIHJlcWJvZHkgKz0gY2h1bmtcclxuICAgICAgICB9KVxyXG4gICAgICAgIHJlcS5vbignZW5kJywgKCkgPT4gcmVzb2x2ZSh1bmRlZmluZWQpKVxyXG4gICAgICB9KVxyXG4gICAgICByZXMuc2V0SGVhZGVyKCdDb250ZW50LVR5cGUnLCAndGV4dC9wbGFpbicpXHJcbiAgICAgIHJlcy5zdGF0dXNDb2RlID0gMjAwXHJcbiAgICAgIHJlcy5lbmQoYGhlbGxvLCAke3JlcWJvZHl9YClcclxuICAgIH1cclxuICB9LFxyXG4gIHtcclxuICAgIHVybDogJy9hcGkvdGV4dCcsXHJcbiAgICBtZXRob2Q6ICdwb3N0JyxcclxuICAgIHJhd1Jlc3BvbnNlOiBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgICAgbGV0IHJlcWJvZHkgPSAnJ1xyXG4gICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuICAgICAgICByZXEub24oJ2RhdGEnLCBjaHVuayA9PiB7XHJcbiAgICAgICAgICByZXFib2R5ICs9IGNodW5rXHJcbiAgICAgICAgfSlcclxuICAgICAgICByZXEub24oJ2VuZCcsICgpID0+IHJlc29sdmUodW5kZWZpbmVkKSlcclxuICAgICAgfSlcclxuICAgICAgcmVzLnNldEhlYWRlcignQ29udGVudC1UeXBlJywgJ3RleHQvcGxhaW4nKVxyXG4gICAgICByZXMuc3RhdHVzQ29kZSA9IDIwMFxyXG4gICAgICByZXMuZW5kKGBoZWxsbywgJHtyZXFib2R5fWApXHJcbiAgICB9XHJcbiAgfVxyXG5dIGFzIE1vY2tNZXRob2RbXVxyXG4iXSwKICAibWFwcGluZ3MiOiAiO0FBRUEsSUFBTyxlQUFRO0FBQUEsRUFDYjtBQUFBLElBQ0UsS0FBSztBQUFBLElBQ0wsUUFBUTtBQUFBLElBQ1IsVUFBVSxDQUFDLEVBQUUsTUFBTSxNQUFNO0FBQ3ZCLGFBQU87QUFBQSxRQUNMLE1BQU07QUFBQSxRQUNOLE1BQU07QUFBQSxVQUNKLE1BQU07QUFBQSxRQUNSO0FBQUEsTUFDRjtBQUFBLElBQ0Y7QUFBQSxFQUNGO0FBQUEsRUFDQTtBQUFBLElBQ0UsS0FBSztBQUFBLElBQ0wsUUFBUTtBQUFBLElBQ1IsU0FBUztBQUFBLElBQ1QsVUFBVTtBQUFBLE1BQ1IsTUFBTTtBQUFBLE1BQ04sTUFBTTtBQUFBLFFBQ0osTUFBTTtBQUFBLE1BQ1I7QUFBQSxJQUNGO0FBQUEsRUFDRjtBQUFBLEVBQ0E7QUFBQSxJQUNFLEtBQUs7QUFBQSxJQUNMLFFBQVE7QUFBQSxJQUNSLGFBQWEsT0FBTyxLQUFLLFFBQVE7QUFDL0IsVUFBSSxVQUFVO0FBQ2QsWUFBTSxJQUFJLFFBQVEsYUFBVztBQUMzQixZQUFJLEdBQUcsUUFBUSxXQUFTO0FBQ3RCLHFCQUFXO0FBQUEsUUFDYixDQUFDO0FBQ0QsWUFBSSxHQUFHLE9BQU8sTUFBTSxRQUFRLE1BQVMsQ0FBQztBQUFBLE1BQ3hDLENBQUM7QUFDRCxVQUFJLFVBQVUsZ0JBQWdCLFlBQVk7QUFDMUMsVUFBSSxhQUFhO0FBQ2pCLFVBQUksSUFBSSxVQUFVLFNBQVM7QUFBQSxJQUM3QjtBQUFBLEVBQ0Y7QUFBQSxFQUNBO0FBQUEsSUFDRSxLQUFLO0FBQUEsSUFDTCxRQUFRO0FBQUEsSUFDUixhQUFhLE9BQU8sS0FBSyxRQUFRO0FBQy9CLFVBQUksVUFBVTtBQUNkLFlBQU0sSUFBSSxRQUFRLGFBQVc7QUFDM0IsWUFBSSxHQUFHLFFBQVEsV0FBUztBQUN0QixxQkFBVztBQUFBLFFBQ2IsQ0FBQztBQUNELFlBQUksR0FBRyxPQUFPLE1BQU0sUUFBUSxNQUFTLENBQUM7QUFBQSxNQUN4QyxDQUFDO0FBQ0QsVUFBSSxVQUFVLGdCQUFnQixZQUFZO0FBQzFDLFVBQUksYUFBYTtBQUNqQixVQUFJLElBQUksVUFBVSxTQUFTO0FBQUEsSUFDN0I7QUFBQSxFQUNGO0FBQ0Y7IiwKICAibmFtZXMiOiBbXQp9Cg==
